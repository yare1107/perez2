let handler = async (m, { conn, usedPrefix, command, args }) => {
  if (!m.isGroup) return m.reply('Este comando solo funciona en grupos')
  
  let chat = global.db.data.chats[m.chat]
  let user = global.db.data.users[m.sender]
  let bot = global.db.data.settings[conn.user.jid] || {}
  
  const groupMetadata = await conn.groupMetadata(m.chat).catch(_ => null)
  const participants = groupMetadata ? groupMetadata.participants : []
  const userParticipant = participants.find(u => conn.decodeJid(u.id) === m.sender)
  const botParticipant = participants.find(u => conn.decodeJid(u.id) == conn.user.jid)
  
  const isRAdmin = userParticipant?.admin == 'superadmin' || false
  const isAdmin = isRAdmin || userParticipant?.admin == 'admin' || false
  const isBotAdmin = botParticipant?.admin || false
  
  const isROwner = [conn.decodeJid(conn.user.id), ...global.owner.map(([number]) => number)].map(v => v.replace(/[^0-9]/g, '') + '@s.whatsapp.net').includes(m.sender)
  const isOwner = isROwner || m.fromMe
  
  let debugInfo = `*üîç DIAGN√ìSTICO COMPLETO DEL GRUPO*\n\n`
  debugInfo += `*üìã Informaci√≥n del Grupo:*\n`
  debugInfo += `‚Ä¢ ID: ${m.chat}\n`
  debugInfo += `‚Ä¢ Nombre: ${groupMetadata?.subject || 'Desconocido'}\n`
  debugInfo += `‚Ä¢ Participantes: ${participants?.length || 0}\n`
  debugInfo += `‚Ä¢ Descripci√≥n: ${groupMetadata?.desc || 'Sin descripci√≥n'}\n\n`
  
  debugInfo += `*üë§ Informaci√≥n del Usuario:*\n`
  debugInfo += `‚Ä¢ ID: ${m.sender}\n`
  debugInfo += `‚Ä¢ Nombre: ${m.name}\n`
  debugInfo += `‚Ä¢ Es Owner: ${isOwner ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Es Admin: ${isAdmin ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Es Super Admin: ${isRAdmin ? '‚úÖ' : '‚ùå'}\n\n`
  
  debugInfo += `*ü§ñ Informaci√≥n del Bot:*\n`
  debugInfo += `‚Ä¢ Es Bot Admin: ${isBotAdmin ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Modo Solo Admin: ${chat?.modoadmin ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Modo Solo Dios: ${chat?.onlyGod ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Grupo Baneado: ${chat?.isBanned ? '‚úÖ' : '‚ùå'}\n\n`
  
  debugInfo += `*‚öôÔ∏è Configuraciones del Grupo:*\n`
  debugInfo += `‚Ä¢ Antilink: ${chat?.antiLink ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Antidelete: ${chat?.delete ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ NSFW: ${chat?.nsfw ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Audios: ${chat?.audios ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Bienvenida: ${chat?.bienvenida ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Detect: ${chat?.detect ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Solo Latinos: ${chat?.onlyLatinos ? '‚úÖ' : '‚ùå'}\n\n`
  
  debugInfo += `*üîß Configuraciones del Bot:*\n`
  debugInfo += `‚Ä¢ JadiBot MD: ${bot?.jadibotmd ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Auto Bio: ${bot?.autobio ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Anti Privado: ${bot?.antiPrivate ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Auto Read: ${bot?.autoread ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Anti Spam: ${bot?.antiSpam ? '‚úÖ' : '‚ùå'}\n\n`
  
  debugInfo += `*üìä Estado del Usuario:*\n`
  debugInfo += `‚Ä¢ Registrado: ${user?.registered ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Baneado: ${user?.banned ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Premium: ${user?.premium ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ Muteado: ${user?.muto ? '‚úÖ' : '‚ùå'}\n`
  debugInfo += `‚Ä¢ XP: ${user?.exp || 0}\n`
  debugInfo += `‚Ä¢ Nivel: ${user?.level || 0}\n`
  debugInfo += `‚Ä¢ L√≠mite: ${user?.limit || 0}\n`
  debugInfo += `‚Ä¢ Spam: ${user?.spam || 0}\n\n`
  
  debugInfo += `*‚ö†Ô∏è PROBLEMAS DETECTADOS:*\n`
  let problems = []
  let solutions = []
  
  if (chat?.isBanned && !isROwner) {
    problems.push('‚Ä¢ üö´ Grupo est√° baneado')
    solutions.push('‚Ä¢ /unbanchat - Desbanear grupo')
  }
  
  if (chat?.modoadmin && !isAdmin && !isOwner) {
    problems.push('‚Ä¢ üîí Modo solo admin activado')
    solutions.push('‚Ä¢ /config modoadmin off - Desactivar modo admin')
  }
  
  if (chat?.onlyGod && !isOwner && !isAdmin) {
    problems.push('‚Ä¢ üëë Modo solo Dios activado')
    solutions.push('‚Ä¢ /config onlygod off - Desactivar modo Dios')
  }
  
  if (user?.banned && !isROwner) {
    problems.push('‚Ä¢ üö´ Usuario est√° baneado')
    solutions.push('‚Ä¢ /unbanuser @usuario - Desbanear usuario')
  }
  
  if (!isBotAdmin) {
    problems.push('‚Ä¢ ü§ñ Bot no es administrador')
    solutions.push('‚Ä¢ Hacer al bot administrador del grupo')
  }
  
  if (user?.spam > 10) {
    problems.push('‚Ä¢ üö® Usuario con mucho spam')
    solutions.push('‚Ä¢ /resetconfig user - Resetear usuario')
  }
  
  if (problems.length === 0) {
    debugInfo += '‚úÖ No se detectaron problemas\n\n'
  } else {
    debugInfo += problems.join('\n') + '\n\n'
    debugInfo += `*üí° SOLUCIONES RECOMENDADAS:*\n`
    debugInfo += solutions.join('\n') + '\n\n'
  }
  
  debugInfo += `*üîß COMANDOS DE SOLUCI√ìN R√ÅPIDA:*\n`
  debugInfo += `‚Ä¢ /quickfix - Soluci√≥n autom√°tica\n`
  debugInfo += `‚Ä¢ /resetconfig all - Resetear todo\n`
  debugInfo += `‚Ä¢ /resetconfig chat - Resetear solo grupo\n`
  debugInfo += `‚Ä¢ /resetconfig user - Resetear solo usuario\n`
  debugInfo += `‚Ä¢ /config info - Ver estado actual\n`
  
  debugInfo += `\n*üìù Informaci√≥n T√©cnica:*\n`
  debugInfo += `‚Ä¢ Conexi√≥n: ${conn.user ? '‚úÖ Conectado' : '‚ùå Desconectado'}\n`
  debugInfo += `‚Ä¢ Base de datos: ${global.db.data ? '‚úÖ Activa' : '‚ùå Inactiva'}\n`
  debugInfo += `‚Ä¢ Timestamp: ${new Date().toLocaleString()}\n`
  
  m.reply(debugInfo)
}

handler.help = ['debug', 'diagnostico']
handler.tags = ['owner']
handler.command = /^(debug|diagnostico)$/i
handler.owner = true

export default handler 